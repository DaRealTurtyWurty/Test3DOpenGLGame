#version 330

in vec2 pass_textureCoords;

out vec4 out_Colour;

uniform vec3 colour;
uniform vec3 outlineColour;
uniform bool glow;
uniform sampler2D fontAtlas;

const float width = 0.5;
const float edge = 0.1;
const float constBorderWidth = 0.7;
const float constBorderEdge = 0.1;

float smoothlyStep(float edge0, float edge1, float x) {
	float t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);
	return t * t * (3.0 - 2.0 * t);
}

void main(void) {
	float borderWidth = constBorderWidth;
	float borderEdge = constBorderEdge;
	if(glow) {
		borderWidth = 0.5f;
		borderEdge = 0.4f;
	}

	float distance = 1.0 - texture(fontAtlas, pass_textureCoords).a;
	float alpha = 1.0 - smoothlyStep(width, width + edge, distance);
	
	float distance2 = 1.0 - texture(fontAtlas, pass_textureCoords).a;
	float outlineAlpha = 1.0 - smoothlyStep(borderWidth, borderWidth + borderEdge, distance2);
	
	float overallAlpha = alpha + (1.0 - alpha) * outlineAlpha;
	vec3 overallColour = mix(outlineColour, colour, alpha / overallAlpha);
	
	out_Colour = vec4(overallColour, overallAlpha);
}